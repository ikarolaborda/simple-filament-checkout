version: '3.9'

services:
    database:
        container_name: database
        image: mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
            - '4306:3306'
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - payment-dev

    payment-php:
        container_name: php
        build:
            context: ./docker/php/
            dockerfile: Dockerfile
        ports:
            - '9000:9000'
        volumes:
            - ./:/var/www/payment
            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        depends_on:
            - database
        networks:
            - payment-dev

    nginx:
        container_name: nginx
        image: nginx:latest
        ports:
            - '80:80'
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./:/var/www/payment
        depends_on:
            - payment-php
        networks:
            - payment-dev

    phpmyadmin:
        container_name: pma
        image: phpmyadmin/phpmyadmin
        links:
            - database
        environment:
            PMA_HOST: database
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        restart: always
        ports:
            - '8083:80'
        depends_on:
            - database
            - payment-php
            - nginx
        networks:
            - payment-dev

    ngrok:
        container_name: ngrok
        image: wernight/ngrok
        environment:
            NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
            NGROK_PORT: nginx:80
        command: ngrok http ${NGROK_PORT} --region=us
        ports:
            - '4040:4040'
        depends_on:
            - nginx
        networks:
            - payment-dev

    redis:
        container_name: redis
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - redis-data:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s
        networks:
            - payment-dev

volumes:
    mysql-data:
        driver: local
    redis-data:
        driver: local

networks:
    payment-dev:
        driver: bridge
